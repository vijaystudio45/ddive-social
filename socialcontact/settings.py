"""
Django settings for socialcontact project.

Generated by 'django-admin startproject' using Django 3.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config

from dotenv import load_dotenv
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-jsr+=uorm)j$0+q^5n1!cr%7%dkm*oi6$h&xbd=4l9qn2z(@f-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True



# ALLOWED_HOSTS = ['*', '51.20.176.13', 'ddivesocial.com', 'www.ddivesocial.com']
ALLOWED_HOSTS = ['*']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'storages',
    'authentication',
    'social_media_post',
    'social_django',
    'django_celery_beat',
    'django_celery_results',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'restrict_urls.middleware.RestrictURLMiddleware',
  

    'social_django.middleware.SocialAuthExceptionMiddleware',  # social auth

]

ROOT_URLCONF = 'socialcontact.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],

        # 'DIRS': [BASE_DIR,"templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect', 
            ],
        },
    },
]

WSGI_APPLICATION = 'socialcontact.wsgi.application'

AUTH_USER_MODEL = 'authentication.CustomUser'
# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]




MEDIA_ROOT =  os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'



# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# CRISPY_TEMPLATE_PACK = 'bootstrap4'


SOCIAL_AUTH_FACEBOOK_KEY = "1771703993310026"
SOCIAL_AUTH_FACEBOOK_SECRET = "ea6e4300df0e6087d9d6df63ac12bd84"


# SOCIAL_AUTH_FACEBOOK_KEY = '748250723966913'  
# SOCIAL_AUTH_FACEBOOK_SECRET = 'fa32ab5a98154e06de6460d131e38d72' 


AUTHENTICATION_BACKENDS = (
    'social_core.backends.facebook.FacebookOAuth2',
    'social_core.backends.twitter.TwitterOAuth',
    'social_core.backends.github.GithubOAuth2',

    'django.contrib.auth.backends.ModelBackend',


    'social_core.backends.linkedin.LinkedinOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)


# SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/'
# SOCIAL_AUTH_LOGIN_URL = 'login2'

# LOGIN_URL = 'login'
# LOGIN_REDIRECT_URL = 'home'
# LOGOUT_URL = 'logout'
# LOGOUT_REDIRECT_URL = 'login'


LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'https://facebook.com/'
LOGOUT_URL = 'logout'
LOGOUT_REDIRECT_URL = 'login'

'''
SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = '77jxi0297t51d6'
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = 'cyGaBhJv2wh2LKpS'
'''
BASE_URL = "https://ddivesocial.com"
# BASE_URL = "http://51.20.176.13:8000/"
SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = '775avibli3iksz'
# SOCIAL_AUTH_LINKEDIN_OAUTH2_KEY = '78ul3zsyhxo85v'
SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = 'T9UilMukOzwU5Eup'
# SOCIAL_AUTH_LINKEDIN_OAUTH2_SECRET = 'b4ABbFUWkEcabO2r'
SOCIAL_AUTH_LINKEDIN_OAUTH2_SCOPE  = "w_member_social,email,profile,r_basicprofile,openid,w_organization_social,r_organization_social,r_organization_admin,rw_organization_admin"
LINKEDIN_REDIRECT_URL = f'{BASE_URL}/linkedin/callback/access/'
LINKEDIN_BASE_URL = "https://www.linkedin.com/oauth/v2/authorization"
LINKEDIN_ACCESS_URL = "https://www.linkedin.com/oauth/v2/accessToken"



# BASE_URL_FACEBOOK = 


AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')
AWS_SECRET_ACCESS_KEY = os.environ.get('AWS_SECRET_ACCESS_KEY')
AWS_STORAGE_BUCKET_NAME = 'ddive.ai'
AWS_S3_SIGNATURE_VERSION = 's3v4'
AWS_S3_REGION_NAME = 'eu-north-1'
AWS_S3_FILE_OVERWRITE = False
AWS_DEFAULT_ACL = None
AWS_S3_VERIFY = True

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'


#--------------------------celery-----------------------------#
# save Celery task results in Django's database
CELERY_RESULT_BACKEND = "django-db"

# This configures Redis as the datastore between Django + Celery
CELERY_BROKER_URL = config('CELERY_BROKER_REDIS_URL', default='redis://localhost:6379')
# if you out to use os.environ the config is:
# CELERY_BROKER_URL = os.environ.get('CELERY_BROKER_REDIS_URL', 'redis://localhost:6379')


# this allows you to schedule items in the Django admin.
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers.DatabaseScheduler'



